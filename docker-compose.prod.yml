version: '2'
services:
  nginx:
    restart: always
    container_name: jobsuf_prod_nginx
    image: nginx
    # build:
    #   context: deploy/prod
    #   dockerfile: web.docker
    depends_on:
      - back
      - front
    volumes:
      # - ./deploy/prod/certs:/etc/nginx/certs
      - ./deploy/prod/templates:/etc/nginx/templates
      - sock:/tmp/sock
      - static:/tmp/static
      - front_build:/tmp/front_build
    environment:
      - NGINX_FRONT_HOST=${FRONT_HOST}
      - NGINX_API_HOST=${API_HOST}
      - VIRTUAL_HOST=jobsuf.tk,api.jobsuf.tk
    # ports:
    #   - "80:80"
    #   - "443:443"
  back:
    restart: always
    container_name: jobsuf_prod_back
    image: own-registry.tk/jobsuf_back:latest
    environment:
      - "DEBUG=True"
      - "API_HOST=${API_HOST}"
      - "FRONT_URL=${FRONT_URL}"
      - "SECRET_KEY=${DJANGO_SECRET_KEY}"
      - "CSRF_COOKIE_DOMAIN=${DJANGO_CSRF_COOKIE_DOMAIN}"
      - "SESSION_COOKIE_DOMAIN=${DJANGO_CSRF_COOKIE_DOMAIN}"
      # - "SESSION_COOKIE_SAMESITE=Lax"
      # - "CSRF_COOKIE_SAMESITE=Lax"
      - "DB_HOST=database"
      - "DB_USER=db_user"
      - "DB_PASSWORD=sHyd890s:su"
      - "LOG_QUERY=False"
    # command: uwsgi --ini /var/www/uwsgi.ini
    working_dir: /var/www/back
    links:
      - database
    # stdin_open: true
    # tty: true
    volumes:
      - sock:/tmp/sock
      - static:/var/www/back/static
  database:
    restart: always
    container_name: jobsuf_prod_database
    environment:
      - "POSTGRES_USER=db_user"
      - "POSTGRES_PASSWORD=sHyd890s:su"
      - "POSTGRES_DB=db"
    volumes:
      - pgdata_prod:/var/lib/postgresql/data/
  front:
    container_name: jobsuf_prod_front
    image: own-registry.tk/jobsuf_front:latest
    stdin_open: true
    tty: true
    volumes:
      # - ./front:/var/www
      - front_build:/var/www/dist
      - front_node_modules:/var/www/node_modules
    environment:
      - "VUE_APP_API_URL=${API_URL}"
      - "VUE_APP_API_PORT=443"
    # ports:
      # - "80:8080"
      # - "3000:3000"

volumes:
    sock:
    static:
    pgdata_prod:
    front_build:
    front_node_modules:

networks:
  default:
    external:
      name: nginx-proxy
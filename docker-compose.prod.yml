version: '2'
services:
  nginx:
    # restart: always
    container_name: jobsuf_prod_nginx
    image: nginx
    # build:
    #   context: deploy/prod
    #   dockerfile: web.docker
    depends_on:
      - back
      - front
    volumes:
      - ./deploy/prod/templates:/etc/nginx/templates
      - sock:/tmp/sock
      - static:/tmp/static
      - front_build:/tmp/front_build
    environment:
      - NGINX_FRONT_HOST=${NGINX_FRONT_HOST}
      - NGINX_API_HOST=${NGINX_API_HOST}
    ports:
      - "80:80"
  back:
    container_name: jobsuf_prod_back
    build:
      context: deploy/prod
      dockerfile: app.docker
      args:
        - REPO_SSH=${REPO_SSH}
        - REPO_BRANCH=${REPO_BRANCH}
        - REPO_FOLDER=back
    environment:
      - "DEBUG=True"
      - "SECRET_KEY=${DJANGO_SECRET_KEY}"
      - "CSRF_COOKIE_DOMAIN=${DJANGO_CSRF_COOKIE_DOMAIN}"
      - "DB_USER=db_user"
      - "DB_PASSWORD=sHyd890s:su"
      - "DB_HOST=database"
      - "LOG_QUERY=False"
    command: uwsgi --ini /var/www/uwsgi.ini
    working_dir: /var/www
    links:
      - database
    stdin_open: true
    tty: true
    volumes:
      - sock:/tmp/sock
      - static:/var/www/back/static
      # - ./back:/var/www/back
      # - ./back:/var/www/back
    # ports:
    #   - "8000:8000"
    #   - "3000:3000"
  database:
    container_name: jobsuf_prod_database
    environment:
      - "POSTGRES_USER=db_user"
      - "POSTGRES_PASSWORD=sHyd890s:su"
      - "POSTGRES_DB=db"
    volumes:
      - pgdata_prod:/var/lib/postgresql/data/
  front:
    container_name: jobsuf_prod_front
    build:
      context: deploy/prod
      dockerfile: front.docker
      args:
      - REPO_SSH=${REPO_SSH}
      - REPO_BRANCH=${REPO_BRANCH}
      - REPO_FOLDER=front
    # stdin_open: true
    # tty: true
    volumes:
      # - ./front:/var/www
      - front_build:/var/www/dist
    environment:
      - "VUE_APP_API_URL=${API_URL}"
      - "VUE_APP_API_PORT=80"
    # ports:
      # - "80:8080"
      # - "3000:3000"

volumes:
    sock:
    static:
    pgdata_prod:
    front_build: